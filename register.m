function transforms = register(images)

count = numel(images);

points = cell(size(images));
features = cell(size(images));
for i = 1 : count
    % ROI is to exclude top/bottom text of image
    % make this a preprocessing step
    Y_START = 65;
    Y_STOP = 100;
    ROI = [...
        1, ...
        Y_START, ...
        size(images{i}, 1) - 1, ...
        size(images{i}, 2) - 1 - Y_STOP - Y_START ...
        ];

    points{i} = detectSURFFeatures(...
        images{i}, ...
        "metricthreshold", 500.0, ...
        "roi", ROI, ...
        "numoctaves", 4, ...
        "numscalelevels", 6 ...
        );
    [features{i}, points{i}] = extractFeatures(...
        images{i}, points{i}, ...
        "upright", false ...
        );
end

transforms(count) = rigid2d(eye(3));
for i = 2 : count
    index_pairs = matchFeatures(...
        features{i}, features{1}, ...
        "unique", false, ...
        "matchthreshold", 50.0, ...
        "maxratio", 0.5 ...
        );
    matched_points_first = points{i}(index_pairs(:, 1), :);
    matched_points_second = points{1}(index_pairs(:, 2), :);

    a = de2bi(i+33, 32);
    b = de2bi(31415, 32);
    c = xor(a, b);
    d = bi2de(c);
    rng(d);

    transforms(i) = estimateGeometricTransform2D(...
        matched_points_first, matched_points_second, ...
        "rigid", ...
        "confidence", 99.9, ...
        "maxnumtrials", 20000 ...
        );
end

end
